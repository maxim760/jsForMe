// == ПРИЛОЖЕНИЕ == \\

import React, {useState} from 'react';

function App({side}) {
  if(!side) {
    side = "light"
  }
  const characters = [
    {name:"Люк Скайвокер", side:"light"},
    {name:"Йода", side:"light"},
    {name:"Обиван Кеноби", side:"light"},
    {name:"Палпатин", side:"dark"},
    {name:"Дарт Вэйдер", side:"dark"},
  ]
  const filteredChars = characters.filter(char => char.side === side)
  return (
    <ul>
      {filteredChars.map((char,i) => {
        return (
          <Character key={char.name + i} side={char.side} name={char.name} />
        )
      })}
    </ul>
  )
}
export default App;

// Character
export default Character({name,side}) {
  return (
    <li>{name} - <b>{side}</b></li>
  )
}

// ПАКЕТЫ
yarn add enzyme enzyme-adapter-react-16 react-test-renderer

// СОЗДАЕМ ФАЙЛ App.test.js рядом с App.js


// ТЕСТ
import React from "react"
import {configure, shallow} from 'enzyme'
import Adapter from 'enzyme-adapter-react-16'
import App from "./App"
import Character from "./character"

configure({
  adapter: new Adapter()
})

describe('<App />', () => {
  let wrapper;
    
   beforeEach(() => {
      wrapper = shallow(<App />)
   }) // перед каждым it сооздается
  
  it('Should render 3 characters in light side', () => {
      expect(wrapper.find(Character)).toHaveLength(3) // ожидаем 3 элемента
  })
  it('Should render 2 characters in dark side', () => {
      wrapper.setProps({
              side:"dark"
      })
      expect(wrapper.find(Character)).toHaveLength(2) // ожидаем 2 элемента
  })

})
// для теста - yarn test
