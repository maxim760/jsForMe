// СТИЛИ

import {View, StyleSheet, Button, Dimensions} from "react-native"

const styles = StyleSheet.create({
  button: {
      // width: Dimensions.get("window").width / 3 ,
      width: Dimensions.get("window").width > 400 ? 150 : Dimensions.get("screen").width > 350 ? 125 : 100 ,
  }
})

// ОРИЕНТАЦИЯ
в app.json:
"orientation": "default" - и вертикальная и горизонтальная ориентация
"orientation": "portrait" - только вертикальная
// как только внесены изменения => пересобрат приложение
 // где надо типа картинку помещаем в скролл вью и дркгие неолшие измен5ния главно родительскому вью добалвять флекс: 1 
 // за счет того что на флексах и юзается space around и space between - все выглядит норм более менее
 
// определние ширины через стэйт //  ВАЖНО
 
 const [deviceWidth, setDeviceWidth] = useState(Dimensions.get("window").width - 2*THEME.PADDING_HORIZONTAL)

  useEffect(() => {
    const update = () => {
      const width = Dimensions.get("window").width - 2*THEME.PADDING_HORIZONTAL
      setDeviceWidth(width)
    }
    Dimensions.addEventListener("change", update)
    return () =>  (
      Dimensions.removeEventListener("change", update) // при выходе из элемента событие пропадает, так как нужно его появление 
      // только при useEffect а не чтобы он заранее был
    )
  }, []) // добавляем событие 1 раз , дальше оно когда надо будет использоваться
// ИСПОЛЬЗОВАНИЕ
<View style={{width: deviceWidth, flex:1}}> // для обоих ориентация выглядит корректно
 // размер кнопки в зависимости от экрана
 <View style={{width: deviceWidth > 500 ? 200 : deviceWidth > 400 ? 150 : deviceWidth > 350 ? 125 : 100 }}>
 
 
 
