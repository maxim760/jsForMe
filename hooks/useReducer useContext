...Context.js
import React, {useContext, useReducer} from "react"
const AlertContext  = React.createContext()
// const AlertToggleContext  = React.createContext()

export const useAlert = () => {
    return useContext(AlertContext)
}
// export const useAlertToggle = () => {
//     return useContext(AlertToggleContext)
// }

const SHOW_ALERT = "show"
const HIDE_ALERT = "hide"
const TOGGLE_ALERT = "toggle"

const reducer = (state, action) => {
    switch (action.type) {
        case SHOW_ALERT: return {...state,visible: true, text: action.text}
        case HIDE_ALERT: return {...state,visible: false}
        case TOGGLE_ALERT: return {...state,visible: !state.visible, text: action.text}
        default: return state
    }
}

export const AlertProvider = ({children}) => {
    // const [alert, setAlert] = useState(false)
    // const toggle = () => setAlert(prev => !prev)
    // перепишем под useReducer()

    const [state, dispatch] = useReducer(reducer, {
        visible: false,
        text: ""
    })

    const show = (text) => dispatch({type: SHOW_ALERT, text})
    const hide = () => dispatch({type: HIDE_ALERT})
    const toggle = (text) => dispatch({type: TOGGLE_ALERT,text})

    return (
        <AlertContext.Provider value={{
            visible: state.visible,
            show, hide, toggle,
            text: state.text
        }}>
            {/* <AlertToggleContext.Provider value={toggle}> */}
                {children}
            {/* </AlertToggleContext.Provider>     */}
        </AlertContext.Provider>
    )
}
