// деструктурищация
{
  const resource = {
    a: 'a',
    b: 1
  };

  let {a, b}: { a: string, b: number } = resource;

  console.log(a);
  console.log(b);
}

// необязателньые типы
// можно тип отдельно создать // вынести  в отдельную сущность,а потом к этому типу обращатсья
type C = { a: string, b?: number };

function showProperties({ a, b }: C): void {
  console.log(a);
  console.log(b);
}

//showProperties({a: 'a', b: 9});
showProperties({a: 'a'});

// ПАРМЕТРЫ ПО УМОЛЧАНИю если вдркг вообще ничего не передали
type Schema = { a: string, b?: number };

function init({ a, b = 0 }:Schema = { a: "" }): void { // равно = относится не к схеме, а к ВХОДНЫМ ПАРАМАТЕРАМ , если их не передлаи то по умлочанию { a: "" }
  console.log(a);
  console.log(b);
}

init({ a: 'str'});
