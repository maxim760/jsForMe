// метсо восклицателньыз знаков можно as : (pickedPizza as pizzaTypeToState).price

(pickedPizza as pizzaTypeToState).price  <=> pickedPizza!.price // в частных случаях тождестнвенны

фишка чтобы юзать воскицатедлнве знаки

задаем тип которые будет типизроваться так как мне нжно при определенном условие и в типах - нужный тип и налл
const pickedPizza = needPizzaIndex >= 0 ? state.items[idOne].items[needPizzaIndex] : null // тип через интерференцию выпадет
//и теперь можно юзать pickedPizza! , т к воск знак говрит что элемент точно есть ,а если есть то он не налл и значит он
того типа что и  state.items[idOne].items[needPizzaIndex] и поэтому в моментах когда юзаем pickedPizza и знаем что она там есть , то ставим воскл знак

// если бы было const pickedPizza = needPizzaIndex >= 0 ? state.items[idOne].items[needPizzaIndex] : {}
то нельзя было бы !, так как существование элемента не гарантируетв  нем наличие нужных свойств, обьек путсой он существоем не налл и не андефайнед но св-в в нем нет,
в таком случаем нужен as, но лучше сразу полстравивать таким образовать чтобы можно было знаюзать воскл знак
