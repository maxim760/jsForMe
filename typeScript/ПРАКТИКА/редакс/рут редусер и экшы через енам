import { combineReducers } from "redux";
import { tweetsReducer } from "./ducks/tweets/reducer";
import { TweetsState } from "./ducks/tweets/contracts/state";
import { tagsReducer } from "./ducks/tags/reducer";
import { TagsState } from "./ducks/tags/contracts/state";
import { TweetState } from "./ducks/tweet/contracts/state";
import { tweetReducer } from "./ducks/tweet/reducer";

export const rootReducer = combineReducers({
  tweets: tweetsReducer,
  tags: tagsReducer,
  tweet: tweetReducer,
});

export interface RootState {
  tweets: TweetsState;
  tags: TagsState;
  tweet: TweetState;
}


//////////////////////////////////
//енам
import { TweetsState, LoadingState } from "./contracts/state";
import { Action } from "redux"

// структура : 1 енам который держит все типы, интерфейс каждой экшн и сам экшн каждый и 1 тип который все экшны содержит
// то что есть 1 енам очень классно, просто в него  все добавляем и всё!!!, не надо доп экспортов и тд  
export enum TweetsActionsType {
  SET_TWEETS = "tweets/SET_TWEETS",
  FETCH_TWEETS = "tweets/FETCH_TWEETS",
  SET_LOADING_STATE = "tweets/SET_LOADING_STATE",
}

export interface SetTweetsActionInterface extends Action<TweetsActionsType> {
  type: TweetsActionsType.SET_TWEETS;
  payload: TweetsState["items"]
}
export interface SetTweetsLoadingStateActionInterface extends Action<TweetsActionsType> {
  type: TweetsActionsType.SET_LOADING_STATE;
  payload: LoadingState
}

export interface FetchTweetsActionInterface extends Action<TweetsActionsType> {
  type: TweetsActionsType.FETCH_TWEETS;
}

export const setTweets = (payload: TweetsState["items"]): SetTweetsActionInterface => ({
    type: TweetsActionsType.SET_TWEETS,
    payload
})


export const setTweetsLoadingState = (payload: LoadingState ): SetTweetsLoadingStateActionInterface => ({
    type: TweetsActionsType.SET_LOADING_STATE,
    payload
})

export const fetchTweets = (): FetchTweetsActionInterface => ({
    type: TweetsActionsType.FETCH_TWEETS
})


export type TweetsAction = SetTweetsActionInterface | SetTweetsLoadingStateActionInterface | FetchTweetsActionInterface ; 
