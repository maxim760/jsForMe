пакет:  yarn add --dev typescript @types/react @types/node

// вроде нет готового шаблона, надо все переименовывать под tsx

затем yarn dev , тогда создастся файл тс конфиг

/// Get initial props
import { NextPageContext } from "next"
Posts.getInitialProps = async ({req} : NextPageContext) => {

// Get server side props
import {  GetServerSideProps } from "next"
export const getServerSideProps: GetServerSideProps = async ({params}) => {
// доп типизация
export const getServerSideProps: GetServerSideProps<any,{id:string}> = async ({params,res}) => {

  console.log(params.id); // 2 параметр  вдженериках отвечал за params // так подскзаывал вс код



// req и res
import { NextApiRequest,NextApiResponse } from "next"
export default function echo(req: NextApiRequest, res: NextApiResponse) {

или вот

interface IMessageNexpApiReq extends NextApiRequest {
  query: {
    message?: string
  }
}

export default function echo(req: IMessageNexpApiReq, res: NextApiResponse) {
  res.statusCode = 200
  res.setHeader("Content-type", "application/json")
  res.end(
    JSON.stringify({
      message: req.query.message ?? "Base query"
    })
  )
}
