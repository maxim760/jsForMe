// магазин пицц, короче крзина составляет много предметов, какую архитектуру выбрать туппо масив или шо

// очень крутой варик
export type cartState = {
  items: {
    [key: number]: {
      items: pizzaTypeToState[],
      totalCount: number
    }
  }
  totalPrice: number
  itemsCount: number
}

// отедлные ключиитем каунт и тотал прайс, чтобы вся логика на редаксе хранилась
// в айтемсах не массив, а обьект с динамическими клчамкотоые генерируются по ай ди выбранной пиццы
// приемущество в том , чтобы посчитать кол-во нужных пицц опрдеелнного ай ди ил что0то найти можнообратиться по айди и всё, и не делать миллионы фитров мапов и редьюсов
// все уже четко распределено
//в айтемсаъ по динамическому ключу кроме пицц еще есть тоталКаунт, чтобы знать всего сколько пицц опреденной марки (айди) а не вообще всего кол-во
// надо чтобы на компоненте отвечающем за отображение не едлать редьюсы и не считать сколько пицц каждого типа ,пробегаясь по массиву айтемом,
//эта информация уде будет доступна в редаксе

//==============================

Логику можно прописывать не в редьюсере в экшнах, добавить там thunk и можно получать не только диспатч но и гетСтэйт =>и соответсвенно спрашивать гет Стэйт
и в зависимости от стэйтов что-то делать
// условно логику обработки исключительных случаев нельзя перенести в акншы (тип удаление которое мождет полнотсьюудалит айди, удалить какой-то обьект айди уменьшет свойстов обьекта айди итд)
// а допустим тотал каунт и ценник можно типа через гет стэйт беру прошлый ценник, чека. каклй ценник и каунт добавляю, делаю лггику т.е. считаю итоговый каунти ценник
// и готовые значения переношу в редьюсер в акшн пэйлоуде и из-заэтгго ужеменьше необязательной логики в редьюсере!!!
